// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id       Int       @id @default(autoincrement())
  name     String?
  email    String    @unique
  profile  Profile?
  blogs    Blog[]
  comments Comment[]
}

model Profile {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  address  String?
  phone    String?
  user     Users  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   Int    @unique
}

model Blog {
  id        Int       @id @default(autoincrement())
  title     String
  content   String?   @db.Text
  published Boolean   @default(false)
  createdAt DateTime  @default(now())
  author    Users     @relation(fields: [authorId], references: [id])
  authorId  Int
  tags      Tag[]
  comments  Comment[]
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String
  blogs Blog[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String   @db.Text
  createdAt DateTime @default(now())
  author    Users    @relation(fields: [authorId], references: [id])
  authorId  Int
  blog      Blog     @relation(fields: [blogId], references: [id])
  blogId    Int
}
